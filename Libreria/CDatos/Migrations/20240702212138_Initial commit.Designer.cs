// <auto-generated />
using System;
using CDatos.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CDatos.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    [Migration("20240702212138_Initial commit")]
    partial class Initialcommit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("en_US.UTF-8")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CEntidades.Entidades.Autor", b =>
                {
                    b.Property<string>("IdAutor")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CantidadLibroEscrito")
                        .HasColumnType("int");

                    b.HasKey("IdAutor")
                        .HasName("PK_ID_AUTOR");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("CEntidades.Entidades.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<bool>("PagaIva")
                        .HasColumnType("bit");

                    b.Property<bool>("TieneMembrecia")
                        .HasColumnType("bit");

                    b.HasKey("IdCliente")
                        .HasName("PK_ID_CLIENTE");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("CEntidades.Entidades.CopiaLibro", b =>
                {
                    b.Property<int>("IdCopiaLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCopiaLibro"));

                    b.Property<double>("PrecioPrestamo")
                        .HasColumnType("float");

                    b.HasKey("IdCopiaLibro")
                        .HasName("PK_ID_COPIA_LIBRO");

                    b.ToTable("CopiaLibro");
                });

            modelBuilder.Entity("CEntidades.Entidades.Editorial", b =>
                {
                    b.Property<int>("IdEditorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEditorial"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEditorial")
                        .HasName("PK_ID_EDITORIAL");

                    b.ToTable("Editorial");
                });

            modelBuilder.Entity("CEntidades.Entidades.Empleado", b =>
                {
                    b.Property<string>("IdEmpleado")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Sueldo")
                        .HasColumnType("float");

                    b.HasKey("IdEmpleado")
                        .HasName("PK_ID_EMPLEADO");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("CEntidades.Entidades.FormaPago", b =>
                {
                    b.Property<int>("IdFormaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFormaPago"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFormaPago")
                        .HasName("PK_ID_FORMA_PAGO");

                    b.ToTable("FormaPago");
                });

            modelBuilder.Entity("CEntidades.Entidades.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGenero"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGenero")
                        .HasName("PK_ID_GENERO");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("CEntidades.Entidades.GeneroLibro", b =>
                {
                    b.Property<int>("IdGeneroLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGeneroLibro"));

                    b.Property<int>("IdLibro")
                        .HasColumnType("int");

                    b.HasKey("IdGeneroLibro")
                        .HasName("PK_ID_GENERO_LIBRO");

                    b.ToTable("GeneroLibro");
                });

            modelBuilder.Entity("CEntidades.Entidades.Libro", b =>
                {
                    b.Property<int>("IdLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLibro"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLibro")
                        .HasName("PK_ID_LIBRO");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("CEntidades.Entidades.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Dni")
                        .HasColumnType("bigint");

                    b.Property<int>("Documento")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPersona")
                        .HasName("PK_ID_PERSONA");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("CEntidades.Entidades.Prestamo", b =>
                {
                    b.Property<string>("IdPrestamo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPrestamo")
                        .HasName("PK_ID_PRESTAMO");

                    b.ToTable("Prestamo");
                });

            modelBuilder.Entity("CEntidades.Entidades.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.HasKey("IdVenta")
                        .HasName("PK_ID_VENTA");

                    b.ToTable("Venta");
                });
#pragma warning restore 612, 618
        }
    }
}
